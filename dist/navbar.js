define("text!qk-alchemy/components/layout/navbar.component.html",[],function(){return'<quark-component>\r\n    <div class="navbar navbar-default navbar-fixed-top" role="navigation" data-bind="onBind: init">\r\n        <div class="container-fluid">\r\n            <div class="navbar-header">\r\n                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\r\n                    <span class="sr-only">Desplegar menu</span>\r\n                    <span class="icon-bar"></span>\r\n                    <span class="icon-bar"></span>\r\n                    <span class="icon-bar"></span>\r\n                </button>\r\n                    <a data-bind="attr: { href: url }" class="navbar-brand">\r\n                        <!-- ko if: visibleIcon -->\r\n                            <!-- ko ifnot: iconType() == \'font\' -->\r\n                                <img data-bind="attr: { src: iconUrl }" />\r\n                            <!-- /ko -->\r\n                            <!-- ko if: iconType() == \'font\' -->\r\n                                <span class="font-icon" data-bind="css: iconUrl"></span>\r\n                            <!-- /ko -->\r\n                        <!-- /ko -->\r\n                        <span data-bind="text: model.brand"></span>\r\n                    </a>\r\n            </div>\r\n            <div class="collapse navbar-collapse">\r\n                <ul class="nav navbar-nav navbar-left">\r\n                    <!-- ko content: \'left\', virtual: true --><!-- /ko -->\r\n                </ul>\r\n\r\n                <ul class="nav navbar-nav navbar-right" style="padding-right: 15px;">\r\n                    <!-- ko content: \'right\', virtual: true --><!-- /ko -->\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</quark-component>\r\n'}),define("qk-alchemy/components/layout/navbar.component",["knockout","quark","text!./navbar.component.html","../../lib/utils","../layout.component"],function(n,o,t,e,a){function r(t,r){var i,c=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),brand:n.observable("Brand Name"),icon:n.observable()},t,this),r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("The navbar component must be used inside an al-layout component");(i=r.hasNavbar)(!0)},r.visibleIcon=n.pureComputed(function(){return o.isString(c.icon())},r),r.iconType=n.pureComputed(function(){var n=c.icon();if(o.isString(n)){if("url:"==n.substring(0,4))return"image";if("font:"==n.substring(0,5))return"font"}return"unknown"},r),r.iconUrl=n.pureComputed(function(){var n=r.iconType(),o=c.icon();return"image"==n?o.substring(4):"font"==n?o.substring(5):o},r),r.url=n.pureComputed(function(){var n=c.pageName(),t=c.pageParams();if(n)return"#"+o.routing.hash(n,t)}),this.dispose=function(){i(!1)}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/button.component.html",[],function(){return'<!-- quark-component -->\r\n    <li data-bind="onBind: init,\r\n                   css: { active: model.active }">\r\n        <a href="#" data-bind="click: click">\r\n            <!-- ko if: model.iconFont -->\r\n                <span data-bind="css: model.iconFont"></span>&nbsp;\r\n            <!-- /ko -->\r\n            <!-- ko if: model.text -->\r\n                <span data-bind="text: model.text"></span>\r\n            <!-- /ko -->\r\n        </a>\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/button.component",["knockout","quark","text!./button.component.html","../../../lib/utils","../navbar.component"],function(n,o,t,e,a){function r(t,r){var i=this;o.parameters({text:n.observable("Navbar Button"),iconFont:n.observable("glyphicon glyphicon-star"),active:n.observable(!1),onClick:function(){}},t,this),r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("This component must be used inside an al-layout-navbar component")},r.click=function(){o.call(i.onClick)}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/dropdown.component.html",[],function(){return'<!-- quark-component -->\r\n    <li class="dropdown" data-bind="onBind: init, css: { active: model.active }">\r\n        <a href="#" class="dropdown-toggle" data-toggle="dropdown">\r\n            <!-- ko if: model.iconFont -->\r\n                <span data-bind="css: model.iconFont"></span>&nbsp;\r\n            <!-- /ko -->\r\n            <span data-bind="text: model.text"></span>\r\n            <span class="caret"></span>\r\n        </a>\r\n        <ul class="dropdown-menu">\r\n            <!-- ko content: \'*\' -->\r\n            <!-- /ko -->\r\n        </ul>\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/dropdown.component",["knockout","quark","text!./dropdown.component.html","../../../lib/utils","../navbar.component"],function(n,o,t,e,a){function r(t,r){o.parameters({iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Dropdown"),active:n.observable(!1)},t,this),r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("This component must be used inside an al-layout-navbar component")}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/dropdown/divider.component.html",[],function(){return'<!-- quark-component -->\r\n    <li data-bind="onBind: init" class="divider">\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/dropdown/divider.component",["knockout","quark","text!./divider.component.html","../../../../lib/utils","../dropdown.component"],function(n,o,t,e,a){function r(n,o){o.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("This component must be used inside an al-layout-navbar-dropdown component")}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/dropdown/header.component.html",[],function(){return'<!-- quark-component -->\r\n    <li data-bind="onBind: init, text: model.text" class="dropdown-header">\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/dropdown/header.component",["knockout","quark","text!./header.component.html","../../../../lib/utils","../dropdown.component"],function(n,o,t,e,a){function r(t,r){o.parameters({text:n.observable("Header")},t,this),r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("This component must be used inside an al-layout-navbar-dropdown component")}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/dropdown/link.component.html",[],function(){return'<!-- quark-component -->\r\n    <li data-bind="onBind: init, css: { active: isActive, disabled: model.disabled }">\r\n        <a data-bind="attr: { href: url }">\r\n            <!-- ko if: model.iconFont -->\r\n                <span data-bind="css: model.iconFont"></span>&nbsp;\r\n            <!-- /ko -->\r\n\r\n            <span data-bind="text: model.text"></span>\r\n        </a>\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/dropdown/link.component",["knockout","quark","text!./link.component.html","../../../../lib/utils","../dropdown.component"],function(n,o,t,e,a){function r(t,r){function i(){var n=o.routing.current();return n==c.pageName()&&(s(!0),!0)}var c=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Navbar Link"),disabled:n.observable(!1)},t,this);var s=n.observable();r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!r)throw new Error("This component must be used inside an al-layout-navbar-dropdown component");s=r.active,i()},r.url=n.pureComputed(function(){var n=c.pageName(),t=c.pageParams();if(n)return"#"+o.routing.hash(n,t)},r),r.isActive=n.computed(function(){return i()},r),r.dispose=function(){r.isActive.dispose()}}return o.component(r,t)}),define("text!qk-alchemy/components/layout/navbar/link.component.html",[],function(){return'<!-- quark-component -->\r\n    <li data-bind="onBind: init, css: { active: isActive }">\r\n        <a data-bind="attr: { href: url }">\r\n            <!-- ko if: model.iconFont -->\r\n                <span data-bind="css: model.iconFont"></span>&nbsp;\r\n            <!-- /ko -->\r\n\r\n            <span data-bind="text: model.text"></span>\r\n        </a>\r\n    </li>\r\n<!-- /quark-component -->\r\n'}),define("qk-alchemy/components/layout/navbar/link.component",["knockout","quark","text!./link.component.html","../../../lib/utils","../navbar.component"],function(n,o,t,e,a){function r(t,r){var i=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Navbar Link")},t,this),r.init=function(n,o,t){var r=e.findContainer(t,a.modelType);if(!(r instanceof a.modelType))throw new Error("This component must be used inside an al-layout-navbar component")},r.url=n.pureComputed(function(){var n=i.pageName(),t=i.pageParams();if(n)return"#"+o.routing.hash(n,t)},r),r.isActive=n.pureComputed(function(){var n=o.routing.current();return n==i.pageName()},r)}return o.component(r,t)});